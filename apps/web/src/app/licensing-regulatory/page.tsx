'use client';

import React, { useState } from 'react';
import MainLayout from '../../components/layout/MainLayout';
import { Shield, Plus, Search, Download, Upload, Edit3, Trash2, AlertTriangle, CheckCircle, Clock, Calendar, FileText, TrendingUp } from 'lucide-react';interface License {  id: string;  name: string;  type: string;  licenseNumber: string;  jurisdiction: string;  status: string;  expiryDate: string;  daysToExpiry: number;  complianceScore: number;}interface RegulatoryUpdate {  id: string;  title: string;  authority: string;  type: string;  jurisdiction: string;  effectiveDate: string;  impactLevel: string;  status: string;  actionRequired: boolean;}export default function LicensingRegulatoryPage() {  const [searchTerm, setSearchTerm] = useState('');  const [selectedFilter, setSelectedFilter] = useState('all');  const [activeTab, setActiveTab] = useState('licenses');  const [licenses] = useState<License[]>([    {      id: 'LIC001',      name: 'Kenya Advocates License',      type: 'Practice License',      licenseNumber: 'LSK-2024-456',      jurisdiction: 'Kenya',      status: 'Active',      expiryDate: '2024-12-31',      daysToExpiry: 21,      complianceScore: 95    },    {      id: 'LIC002',      name: 'Corporate Law Specialization',      type: 'Specialization License',      licenseNumber: 'CORP-2024-789',      jurisdiction: 'Kenya',      status: 'Active',      expiryDate: '2025-03-10',      daysToExpiry: 89,      complianceScore: 88    }  ]);  const [regulatoryUpdates] = useState<RegulatoryUpdate[]>([    {      id: 'REG001',      title: 'New Data Protection Regulations 2024',      authority: 'Office of Data Protection Commissioner',      type: 'Regulation',      jurisdiction: 'Kenya',      effectiveDate: '2024-12-31',      impactLevel: 'High',      status: 'Pending Implementation',      actionRequired: true    },    {      id: 'REG002',      title: 'Competition Act Amendment 2024',      authority: 'Competition Authority of Kenya',      type: 'Amendment',      jurisdiction: 'Kenya',      effectiveDate: '2024-11-15',      impactLevel: 'Medium',      status: 'In Effect',      actionRequired: false    }  ]);  const getStatusColor = (status: string) => {    switch (status) {      case 'Active': return 'bg-green-100 text-green-800';      case 'Expiring Soon': return 'bg-orange-100 text-orange-800';      case 'Expired': return 'bg-red-100 text-red-800';      case 'In Effect': return 'bg-green-100 text-green-800';      case 'Pending Implementation': return 'bg-yellow-100 text-yellow-800';      case 'Draft': return 'bg-primary-100 text-primary-800';      default: return 'bg-gray-100 text-gray-800';    }  };  const getImpactColor = (impact: string) => {    switch (impact) {      case 'High': return 'bg-red-100 text-red-800';      case 'Medium': return 'bg-yellow-100 text-yellow-800';      case 'Low': return 'bg-green-100 text-green-800';      default: return 'bg-gray-100 text-gray-800';    }  };  const filteredLicenses = licenses.filter(license => {    const matchesSearch = license.name.toLowerCase().includes(searchTerm.toLowerCase());    if (selectedFilter === 'all') return matchesSearch;    return matchesSearch && license.status.toLowerCase().replace(' ', '') === selectedFilter;  });  const filteredUpdates = regulatoryUpdates.filter(update => {    const matchesSearch = update.title.toLowerCase().includes(searchTerm.toLowerCase());    if (selectedFilter === 'all') return matchesSearch;    return matchesSearch && update.impactLevel.toLowerCase() === selectedFilter;  });  return (
    <MainLayout>
      <div className="py-6">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">        {/* Header */}        <div className="mb-8">          <div className="flex items-center justify-between">            <div>              <h1 className="text-3xl font-bold text-gray-900 flex items-center">                <Shield className="mr-3 h-8 w-8 text-primary-600" />                Licensing & Regulatory              </h1>              <p className="text-gray-600 mt-1">License Management & Regulatory Compliance</p>            </div>            <div className="flex space-x-3">              <button className="flex items-center px-4 py-2 border border-gray-300 rounded-lg text-gray-700 bg-white hover:bg-gray-50">                <Upload className="w-4 h-4 mr-2" />                Import              </button>              <button className="flex items-center px-4 py-2 border border-gray-300 rounded-lg text-gray-700 bg-white hover:bg-gray-50">                <Download className="w-4 h-4 mr-2" />                Export              </button>              <button className="flex items-center px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700">                <Plus className="w-4 h-4 mr-2" />                Add {activeTab === 'licenses' ? 'License' : 'Update'}              </button>            </div>          </div>        </div>        {/* Stats Cards */}        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">          <div className="bg-white rounded-lg p-6 shadow-sm border border-gray-200">            <div className="flex items-center">              <div className="p-3 rounded-lg bg-green-100">                <Shield className="w-6 h-6 text-green-600" />              </div>              <div className="ml-4">                <p className="text-sm font-medium text-gray-600">Active Licenses</p>                <div className="flex items-center">                  <p className="text-2xl font-semibold text-gray-900">24</p>                  <span className="ml-2 text-sm text-gray-500">+2</span>                </div>              </div>            </div>          </div>          <div className="bg-white rounded-lg p-6 shadow-sm border border-gray-200">            <div className="flex items-center">              <div className="p-3 rounded-lg bg-orange-100">                <AlertTriangle className="w-6 h-6 text-orange-600" />              </div>              <div className="ml-4">                <p className="text-sm font-medium text-gray-600">Expiring Soon</p>                <div className="flex items-center">                  <p className="text-2xl font-semibold text-gray-900">3</p>                  <span className="ml-2 text-sm text-gray-500">3 items</span>                </div>              </div>            </div>          </div>          <div className="bg-white rounded-lg p-6 shadow-sm border border-gray-200">            <div className="flex items-center">              <div className="p-3 rounded-lg bg-primary-100">                <CheckCircle className="w-6 h-6 text-primary-600" />              </div>              <div className="ml-4">                <p className="text-sm font-medium text-gray-600">Compliance Score</p>                <div className="flex items-center">                  <p className="text-2xl font-semibold text-gray-900">89%</p>                  <span className="ml-2 text-sm text-gray-500">+5%</span>                </div>              </div>            </div>          </div>          <div className="bg-white rounded-lg p-6 shadow-sm border border-gray-200">            <div className="flex items-center">              <div className="p-3 rounded-lg bg-purple-100">                <FileText className="w-6 h-6 text-purple-600" />              </div>              <div className="ml-4">                <p className="text-sm font-medium text-gray-600">Regulatory Updates</p>                <div className="flex items-center">                  <p className="text-2xl font-semibold text-gray-900">8</p>                  <span className="ml-2 text-sm text-gray-500">2 pending</span>                </div>              </div>            </div>          </div>        </div>        {/* Tabs */}        <div className="bg-white rounded-lg shadow-sm border border-gray-200 mb-6">          <div className="border-b border-gray-200">            <nav className="-mb-px flex">              <button                onClick={() => setActiveTab('licenses')}                className={`py-4 px-6 text-sm font-medium border-b-2 ${                  activeTab === 'licenses'                    ? 'border-primary-500 text-primary-600'                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'                }`}              >                <Shield className="w-4 h-4 inline mr-2" />                Licenses & Certifications              </button>              <button                onClick={() => setActiveTab('regulatory')}                className={`py-4 px-6 text-sm font-medium border-b-2 ${                  activeTab === 'regulatory'                    ? 'border-primary-500 text-primary-600'                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'                }`}              >                <FileText className="w-4 h-4 inline mr-2" />                Regulatory Updates              </button>            </nav>          </div>          {/* Search and Filters */}          <div className="p-6">            <div className="flex flex-col sm:flex-row gap-4">              <div className="flex-1">                <div className="relative">                  <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />                  <input                    type="text"                    placeholder={`Search ${activeTab === 'licenses' ? 'licenses' : 'regulatory updates'}...`}                    className="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent"                    value={searchTerm}                    onChange={(e) => setSearchTerm(e.target.value)}                  />                </div>              </div>              <div className="sm:w-48">                <select                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent"                  value={selectedFilter}                  onChange={(e) => setSelectedFilter(e.target.value)}                >                  {activeTab === 'licenses' ? (                    <>                      <option value="all">All Status</option>                      <option value="active">Active</option>                      <option value="expiringsoon">Expiring Soon</option>                      <option value="expired">Expired</option>                    </>                  ) : (                    <>                      <option value="all">All Impact</option>                      <option value="high">High Impact</option>                      <option value="medium">Medium Impact</option>                      <option value="low">Low Impact</option>                    </>                  )}                </select>              </div>            </div>          </div>        </div>        {/* Content Tables */}        <div className="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden">          <div className="px-6 py-4 border-b border-gray-200">            <h3 className="text-lg font-medium text-gray-900">              {activeTab === 'licenses' ? 'Licenses & Certifications' : 'Regulatory Updates'}            </h3>          </div>          <div className="overflow-x-auto">            {activeTab === 'licenses' ? (              <table className="min-w-full divide-y divide-gray-200">                <thead className="bg-gray-50">                  <tr>                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">License</th>                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Type</th>                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Expiry</th>                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Compliance</th>                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>                  </tr>                </thead>                <tbody className="bg-white divide-y divide-gray-200">                  {filteredLicenses.map((license) => (                    <tr key={license.id} className="hover:bg-gray-50">                      <td className="px-6 py-4 whitespace-nowrap">                        <div className="flex items-center">                          <div className="flex-shrink-0 h-10 w-10">                            <div className="h-10 w-10 rounded-lg bg-primary-100 flex items-center justify-center">                              <Shield className="h-5 w-5 text-primary-600" />                            </div>                          </div>                          <div className="ml-4">                            <div className="text-sm font-medium text-gray-900">{license.name}</div>                            <div className="text-sm text-gray-500">{license.licenseNumber} • {license.jurisdiction}</div>                          </div>                        </div>                      </td>                      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">{license.type}</td>                      <td className="px-6 py-4 whitespace-nowrap">                        <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getStatusColor(license.status)}`}>                          {license.status}                        </span>                      </td>                      <td className="px-6 py-4 whitespace-nowrap">                        <div className="text-sm text-gray-900">{license.expiryDate}</div>                        <div className={`text-xs ${license.daysToExpiry <= 30 ? 'text-red-600' : 'text-gray-500'}`}>                          {license.daysToExpiry} days left                        </div>                      </td>                      <td className="px-6 py-4 whitespace-nowrap">                        <div className="flex items-center">                          <div className="flex-1 bg-gray-200 rounded-full h-2 mr-2">                            <div                              className={`h-2 rounded-full ${license.complianceScore >= 90 ? 'bg-green-500' : license.complianceScore >= 70 ? 'bg-yellow-500' : 'bg-red-500'}`}                              style={{ width: `${license.complianceScore}%` }}                            ></div>                          </div>                          <span className="text-sm font-medium text-gray-900">{license.complianceScore}%</span>                        </div>                      </td>                      <td className="px-6 py-4 whitespace-nowrap text-sm font-medium">                        <div className="flex space-x-2">                          <button className="text-indigo-600 hover:text-indigo-900">                            <Edit3 className="w-4 h-4" />                          </button>                          <button className="text-red-600 hover:text-red-900">                            <Trash2 className="w-4 h-4" />                          </button>                        </div>                      </td>                    </tr>                  ))}                </tbody>              </table>            ) : (              <table className="min-w-full divide-y divide-gray-200">                <thead className="bg-gray-50">                  <tr>                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Update</th>                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Authority</th>                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Impact</th>                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Effective Date</th>                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>                  </tr>                </thead>                <tbody className="bg-white divide-y divide-gray-200">                  {filteredUpdates.map((update) => (                    <tr key={update.id} className="hover:bg-gray-50">                      <td className="px-6 py-4 whitespace-nowrap">                        <div className="flex items-center">                          <div className="flex-shrink-0 h-10 w-10">                            <div className="h-10 w-10 rounded-lg bg-purple-100 flex items-center justify-center">                              <FileText className="h-5 w-5 text-purple-600" />                            </div>                          </div>                          <div className="ml-4">                            <div className="text-sm font-medium text-gray-900">{update.title}</div>                            <div className="text-sm text-gray-500">{update.type} • {update.jurisdiction}</div>                          </div>                        </div>                      </td>                      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">{update.authority}</td>                      <td className="px-6 py-4 whitespace-nowrap">                        <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getImpactColor(update.impactLevel)}`}>                          {update.impactLevel}                        </span>                      </td>                      <td className="px-6 py-4 whitespace-nowrap">                        <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getStatusColor(update.status)}`}>                          {update.status}                        </span>                      </td>                      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">{update.effectiveDate}</td>                      <td className="px-6 py-4 whitespace-nowrap text-sm font-medium">                        <div className="flex space-x-2">                          <button className="text-indigo-600 hover:text-indigo-900">                            <Edit3 className="w-4 h-4" />                          </button>                          <button className="text-red-600 hover:text-red-900">                            <Trash2 className="w-4 h-4" />                          </button>                        </div>                      </td>                    </tr>                  ))}                </tbody>              </table>            )}          </div>        </div>                      </div>
      </div>
    </MainLayout>
  );
}
