name: 🔒 Security Scan

on:
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Monday at 2 AM UTC
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  dependency-scan:
    name: 📦 Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📁 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 📦 Install Dependencies
      run: npm ci
      
    - name: 🔒 Run NPM Audit
      run: npm audit --audit-level moderate
      
    - name: 🛡️ Run Snyk Security Scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high --file=package.json
        
    - name: 📊 Upload Snyk Results to GitHub
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: snyk.sarif

  code-scan:
    name: 🔍 Static Code Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: 📁 Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 📦 Install Dependencies
      run: npm ci
      
    - name: 🔍 Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: javascript, typescript
        
    - name: 🏗️ Autobuild
      uses: github/codeql-action/autobuild@v2
      
    - name: 🔍 Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      
    - name: 🔍 Run SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  container-scan:
    name: 🐳 Container Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📁 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: 🏗️ Build API Container
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./apps/api/Dockerfile
        push: false
        tags: counselflow-api:scan
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: 🏗️ Build Web Container
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./apps/web/Dockerfile
        push: false
        tags: counselflow-web:scan
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: 🔒 Scan API Container with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'counselflow-api:scan'
        format: 'sarif'
        output: 'trivy-api-results.sarif'
        
    - name: 🔒 Scan Web Container with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'counselflow-web:scan'
        format: 'sarif'
        output: 'trivy-web-results.sarif'
        
    - name: 📤 Upload Trivy Scan Results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-api-results.sarif'
        
    - name: 📤 Upload Trivy Web Results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-web-results.sarif'

  secrets-scan:
    name: 🔐 Secrets Detection
    runs-on: ubuntu-latest
    
    steps:
    - name: 📁 Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: 🔐 Run TruffleHog
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified
